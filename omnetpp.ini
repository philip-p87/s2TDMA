[General]
network = Aloha
rng-class="cLCG32"   # default is "cMersenneTwister"
num-rngs=100


#General TODO: 
# Proposed (start with TDMA cycle directly)-> right now a simple workaround that substracts the delay and energy for that inital collision is implemented
# CSMA implement proper carrier sensing (right now, cs is only performed at a single point in time)
# General: whenever interference or an collision shifts an event at the end of the interference pulse, it should be done in multiples of CCA

#results will be saved as csv file
Aloha.server.vectorOutput = "C:/results.csv"   #omnet must be run as administrator, or there might be no output

#jeder Host verschickt xxxPakete, dann wird die Simulation angehalten und ausgewertet
Aloha.haltOnPacketNumberSent = 2000			#number of wake-up probes to be received before next iteration
Aloha.minHosts = 20							#-1 if unused (same value as maxHosts)
Aloha.maxHosts = 50
Aloha.HostStepSize = 1
#packet number is always 1 (unless defined otherwise for specific modes)

#mode
Aloha.mode = 4								# 1 proposed (s^2TDMA)
											# 2 Strawman
											# 3 old BTCR (Bin-MAC) (simple: second slot always contains remaining IDs) Interference is not implemented for this mode
											# 4 802.15.4 (non-persistent 802.11)
											# 5 BTCR (as defined in paper)

Aloha.Proposed_recovery_mode = 0			# 0 normal operation
											# 1 recovery slot (beginning of cycle) (beta: needs to be tested again)
											# 2 recovery cycle
											# 3 combination of recovery cycle and slot (not implemented yet)


Aloha.test_mode = 2 						# 0 normal operation (iterate from minHosts to maxHosts)
											# 1 increase maxHosts, but currentNodes will stay constant at minHosts (useful for proposed and BTCR)
											# 2 diff packet sizes, constant number of senders (maxHosts) (configured in server.cc)
											# 3 increases number of slots per cycle	(s2TDMA only)


#General config
Aloha.txRate = 250kbps
Aloha.pkLenBits = 248b#64b					# total packet length with header etc
Aloha.ACKLenBits = 32b						# unused (calculated in server.c) lenght of ACK packet in bits
Aloha.radioDelay = 0ms
Aloha.RX_TX_switching_time = 200us			# [µs] switching time Tx <-> Rx in which receiver cannot receive packets
Aloha.HostMinimumSensingTime = 200us         # minimum time a signal must be present for the receiver (host) to detect it (CCA delay)
Aloha.carrier_sense_duration = 200us		# time of carrier sensing
Aloha.cs_enabled = true						# CSMA only : enable carrier sense NOT implemented yet
Aloha.delay_after_ack = 420us				# delay after ACK/NAK/CR etc. Can implement processing delays, guard times, ect.; if 0 then RX_TX_switching_time is used
Aloha.server.frame_overhead = 15			# header of data packets (15 bytes for 802.15.4 PPDU MPDU with 4bit addr)

#Strawman configuration
Aloha.Strawman_max_repetition = 2
Aloha.Strawman_max_contention_length = 3.7ms	# maximum length of contention pulse //Strawman uses granularity of 224µs
Aloha.Strawman_min_contention_length = 0ms	# not yet supported; must always be 02
Aloha.Strawman_max_contention_slots = 16	# 0 if use HostMinimumSensingTime as a dividor instead. Will equally devide 
Aloha.Strawman_CR_length = 24b				# unused (set to ack length) collision request length in bits; should be the same as ACK
Aloha.Strawman_decision_length = 24b
Aloha.Strawman_contention_start_delay = 0ms #(if 0 then set to t delay_after_ack) delay after notification before contention message starts being sent (should be longer than RX_TX_switching_time)
# time after CP will be delay_after_ack
# time after NOT/DEC will be delay_after_ack

#Bin-MAC configuration
Aloha.BTCR_query_length = 48b				#like CR (contention request) in Strawman
Aloha.BTCR_delay_after_query = 0ms			#(if 0 then delay_after_ack) delay between ACK/NAK and attempt to re-send data (0 for RX_TX_switching_time)
Aloha.BTCR_wait_duration = 2ms				#unused: set automatically in server.cc
#Aloha.BTCR_

#proposed scheme (s^2TDMA, MSWIM 16)
Aloha.Proposed_ACK_length = 48b				#unused (will be overwritten automatically) length of ACK and NAK
Aloha.Proposed_slot_number = 4
Aloha.Proposed_recovery_cycles_max = 1		#number of recovery cycles after regular cycle
Aloha.Proposed_slot_number_start = 2		#for test_mode == 3 (vary slot sized)
Aloha.Proposed_slot_number_stop = 10


#CSMA mode settings
Aloha.CSMA_backoff_time = 320us				# -1: complete packet: ldata + lack + 3tset + tsense; -2 minimum listening time 2*tsense (=4*tbar + 2*tset)
Aloha.CSMA_max_retransmissions = 3          # -1 if use n packets, -2: for mode 2: to get from csma_wc_min to csma_wc_max; also called MaxFrameRetries
Aloha.CSMA_max_backoffs = 4					# MaxCSMABackoffs (node drops frame if channel is not free after MaxCSMABackoffs retries)
Aloha.CSMA_wc_min = 32
Aloha.CSMA_wc_max = 1024					# maximum number of retransmissions is set via CSMA_max_retransmissions -> this value might not be reached for small CSMA_max_retransmissions
Aloha.CSMA_min_BE = 3
Aloha.CSMA_max_BE = 5


Aloha.numberHostsPlotModes = 20				#number of hosts for interference and clock drift plot modes (it stays the same here throughout all iterations)

# Clock drift //ACHTUNG: funktioniert nur im debug modus
Aloha.ClockDriftEnabled = false			    # Enable random clock drift: Drift stays constant over a sequence, but is shuffled before every sequence
Aloha.ClockDriftRangePercent = 0.1			# Maximum Clock drift in percent: 5% for example means, we have up to 0.05s drift per second
Aloha.ClockDriftPlotMode = true				# Will iterate clock drift from 0 to ClockDriftRangePercent and record lost sequences etc.
Aloha.ClockDriftPlotStepNumber = 100 		# Number of iterations in plotMode, must be < 100

# External Interference
Aloha.ExternalInterferenceEnable = false		# Enable the simulation of external interference (NOTE: CLockdrift Plot and this mode are exclusive)
Aloha.ExternalInterferenceDutyCycle = 10	# in percent
Aloha.ExternalInterferencePlotMode = true  	# Will iterate from duty cycle of external interference from 0 to ExternalInterferenceDutyCycle and plot results
Aloha.ExternalInterferencePlotStepNumber = 20 # Number of plot "points": plotMode will iterate this many times, must be <= 100



